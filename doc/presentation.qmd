---
title: "Gene expression analysis of combined treatment of metastatic breast cancer"
author: |
  Martin Vennick Haugbølle, 
  Cecilie Møller-Jensen, 
  Amanda Vinter Eichen, 
  Thomas Vitus, 
  Julie Alsing Haugaard
format:
  revealjs:
    code-line-numbers: true
    smaller: true
    scoll: true
    theme: moon
    transition: slide
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(readr)
library("broom")
library("here")
library("ggrepel")
source("../R/99_proj_func.R")
```

## Study description

This study looks at how a combination of pembrolizumab, exemestane, and leuprolide affects the immune environment in premenopausal women with advanced breast cancer. It tracks changes in immune-related gene expression before and after treatment in 15 patients.

## Work method illustrated by a flowchart

![](images/flowchart1.png){.small-figure}

## Untidy –\> Tidy data

1.  *Each variable is saved in its own column.*
2.  *Each observation is saved in its own row.*
3.  *Each "type" of observation is stored in a single table.*

::: panel-tabset
### Untidy datafile

```{r}
#| echo: true
# Untidy single patient dataset
print(read.csv(here("data/01_dat_load_pre_data_GSM8152441.csv")))
```

### Tidy data


```{r}
#| echo: true
# Cleaned cobined pre and post data for 5 patients
read.csv(here("data/02_dat_clean.csv"))
```


:::

## Augmentation of the data {.scrollable}


```{r}
#| echo: true
#| eval: false
#| results: hide
#| code-line-numbers: "5-7|9-13|15-16|24-28|30-32|33-35"

# Creating wide data frame
df_clean <- read.csv(here("data/02_dat_clean.csv"))

df_wide <- df_clean |>
  # replace outliers for pre and post_count columns
  replace_outliers_with_na("pre_count") |> 
  replace_outliers_with_na("post_count") |>
  rowwise() |> 
  # calculate means
  mutate(mean_pre = 
           round(mean(c_across(starts_with("pre_count")), na.rm = TRUE), 1), 
         mean_post = 
           round(mean(c_across(starts_with("post_count")), na.rm = TRUE), 1)) |>
  ungroup() |> 
  # fold change made of case/control
  mutate(log2_fold_change = log2(mean_post / mean_pre)) 

# save data
write_csv(df_wide, here("data/03_dat_aug_01.csv"))


# make a longer data frame with a row for each "count" variable
df_long <- df_wide |>  
  pivot_longer(
    cols = starts_with("pre_count") | starts_with("post_count"), # select count columns
    names_to = "treatment",  # new column for column names
    values_to = "count_value" # new column for values
  ) |> 
  mutate(log2_count_value = log2(count_value)) |> # calculate log2 of counts
  mutate(bin_treatment = case_when(
                          str_detect(treatment, "^pre") ~ 0, # change "pre" to 0
                          str_detect(treatment, "^post") ~ 1)) |> # change "post" to 1
  mutate(treatment = case_when(
                          str_detect(treatment, "^pre") ~ "pre", # change to "pre" 
                          str_detect(treatment, "^post") ~ "post"))

# save data
write_csv(df_long, here("data/03_dat_aug_02.csv"))
```

## Descriptive statistics

![](images/04_histogram_plot.png){.fragment}{.absolute left="0"}

::: r-stack
![](images/04_top_2_procent_fold_change.png){.fragment}{.absolute left="0"}
:::

## Distribution of log2 fold change per class

![](images/06_boxplot_of_gene_class_log2fc.png){.absolute left="0"}

## Are there significance in the log2 fold change for some genes? {.scrollable}

1.  Nest data

```{r}
#| echo: true
#| results: hide
#| code-line-numbers: "5"
# read augmented datafile
mbc_log2_transformed <- read_csv(here("data/03_dat_aug_02.csv"))
mbc_log2_transformed_nested <- mbc_log2_transformed |> # define new tbl
  group_by(gene) |> # group by name
  nest() # nest data by each gene

```

2.  Fitting linear models

```{r}
#| echo: true
#| results: hide
#| code-line-numbers: "2-5"
mbc_log2_transformed_nested <- mbc_log2_transformed_nested |> 
  mutate(model_object = map( # add a model_object column
    .x = data, # use data column as input
    .f = ~lm(formula = log2_count_value ~ bin_treatment, # model log2 transformed values based on treatment
             data = .x)))
```

3.  Tidying linear model results with confidence intervals

```{r}
#| echo: true
#| results: hide
#| code-line-numbers: "4-6"
mbc_log2_transformed_nested <- mbc_log2_transformed_nested |> 
  mutate(model_object_tidy = map( # add a tidy model_object column
    .x = model_object,
    .f = ~tidy(x = .x,
               conf.int = TRUE,
               conf.level = 0.95)))
```

4.  Unnesting

```{r}
#| echo: true
#| results: hide
#| code-line-numbers: "2"
estimates <- mbc_log2_transformed_nested |> 
  unnest(model_object_tidy) # unnest nested tbl
estimates
```

5.  Filtering and selecting treatment effects from linear model estimates

```{r}
#| echo: true
#| results: hide
#| code-line-numbers: "2-7"
estimates <- estimates |> 
  filter(term == "bin_treatment") |> # choose only "treatment"
  select(gene, # select variables of interest
         p.value, 
         estimate, 
         conf.low, 
         conf.high) |> 
  ungroup() # ungroup tbl

```

## Results

Comment: Explain q value vs p value forest plot

::: r-stack
::: fragment
![](images/07_forest_plot_p_value.png){.small-figure}
:::

::: fragment
![](images/07_volcano_plot_of_signifcantly_expressed_genes.png){.small-figure}
:::
:::

## Results pt 2

![](images/07_gene_ekspression_before_and_after_treatment_4_genes.png){.small-figure}

## Discussion

::: incremental
-   Where any genes significantly up or downregulated with this treatment?
-   What effect could removing outliers have on the findings?
-   How could the analysis be improved?
:::
