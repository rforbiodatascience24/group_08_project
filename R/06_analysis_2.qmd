---
title: "06_analysis_2"
format: html
editor: visual
---

## Load Libraries

```{r}
library(tidyverse)
library(broom)
library(here)
source("99_proj_func.R")
```

## Load data

```{r}
long_data <- read_csv(here("data/03_dat_aug_02.csv"))
print(long_data)
```

### Augment Data

```{r}

mbc_log2_transformed <- long_data |>
  mutate(log2_transformed = log2(count_value)) |>
  rename(gene = name) |> 
  mutate(count_type = case_when(
                          str_detect(count_type, "^pre") ~ 0,
                          str_detect(count_type, "^post") ~ 1)) |> 
  relocate(treatment = count_type)
mbc_log2_transformed
```

## Analysis (make linear models)

```{r}
mbc_log2_transformed_nested <- mbc_log2_transformed |> 
  group_by(gene) |> 
  nest() |> 
  ungroup()

(mbc_log2_transformed_nested)
```

```{r}
mbc_log2_transformed_nested <- mbc_log2_transformed_nested |> 
  group_by(gene) |> 
  mutate(model_object = map(
    .x = data,
    .f = ~lm(formula = log2_transformed ~ treatment,
             data = .x)))
View(mbc_log2_transformed_nested)
```

```{r}
mbc_log2_transformed_nested |>
  filter(gene == "CCNO") |>
  pull(model_object) |> 
  pluck(1) |> 
  tidy(conf.int = TRUE,
       conf.level = 0.95)
```

### Make the variable model_object_tidy

```{r}
mbc_log2_transformed_nested <- mbc_log2_transformed_nested |> 
  group_by(gene) |> 
  mutate(model_object_tidy = map(
    .x = model_object,
    .f = ~tidy(x = .x,
               conf.int = TRUE,
               conf.level = 0.95)))
mbc_log2_transformed_nested
```

### Make the new variable **`estimates`**

```{r}
estimates <- mbc_log2_transformed_nested |> 
  unnest(model_object_tidy)
estimates
```

### only show slope, and ungroup

```{r}
estimates <- estimates |> 
  filter(term == "treatment") |> 
  select(gene, p.value, estimate, conf.low, conf.high) |> 
  ungroup()
estimates
```

adding q.value

```{r}
estimates <- estimates |> 
  mutate(q.value = p.adjust(p.value),
         is_kindof_significant_p = case_when(
                                    p.value < 0.05  ~ "yes", 
                                    p.value > 0.05 ~ "no"))
estimates
```

### Forest plot

```{r}

estimates |> 
  filter(is_kindof_significant_p == "yes") |>
  ggplot(aes(x = estimate, y = fct_reorder(gene, estimate))) +
  geom_point() +
  geom_errorbarh(aes(xmax = conf.low, xmin = conf.high)) +
  theme_minimal(base_size = 8) +
  geom_vline(xintercept = 0, linetype = "solid", color = "black") +
  labs(title = "Genes Associated with Early Metastasis in Small Node-Negative Breast Carcinoma",
       x = "Estimates (95%CIs)",
       y = "Gene",
       caption = "Data from DOI: 10.1002/gcc.20820")
```

volcano plot

```{r}
estimates <- estimates |> 
  mutate(log_of_p = (-log10(p.value)))
#| fig-width: 8
#| fig-height: 5.5
#| dpi: 300
estimates |> 
  ggplot(aes(x = estimate, y = log_of_p)) +
  geom_point(alpha = 0.05) +
  geom_point(data = estimates |> filter(is_kindof_significant_p == "yes"), 
                        color = "turquoise", alpha = 0.6) +
  geom_point(data = estimates |> filter(is_kindof_significant_p == "no"), 
                        color = "tomato", alpha = 0.3) +
  geom_text_repel(data = estimates |> filter(is_kindof_significant_p == "yes"), 
                  aes(label = gene), size = 2, color = "turquoise", max.overlaps = 50) +
  theme_minimal(base_size = 10) +
  geom_hline(yintercept = 0, linetype = "solid", color = "black") +
  labs(title = "Genes Associated with Early Metastasis in Small Node-Negative Breast Carcinoma",
       subtitle = "Genes highlighted in turquoise were significant after multiple testing correction",
       x = "Estimates",
       y = "- log10( p-value )",
       caption = "Data from DOI: 10.1002/gcc.20820") +
  theme(plot.title.position = "plot")
```

```{r}
# Calculate log2 fold change
data_summary <- mbc_log2_transformed_grouped %>%
  group_by(gene) %>%
  summarise(
    log2_fold_change = log2_transformed[treatment == 1] - log2_transformed[treatment == 0],
    mean_treatment_0 = mean_count[treatment == 0],
    mean_treatment_1 = mean_count[treatment == 1]
  )

# View the results
print(data_summary)
```
