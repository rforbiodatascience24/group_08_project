# Load Libraries

```{r}
library(tidyverse)
library(here)
library(dplyr)
library(ggplot2)
```

# Load data

```{r}
log2_fold_change <- read.csv(here("data/03_dat_aug_03.csv"))
```

# Boxplot

```{r}
<<<<<<< HEAD
log2_fold_change_differences_boxplot <- log2_fold_change |>
  ggplot(aes(
    x = code_class, # set code_class as x-axis
    y = log2_fold_change,  # set log2_fold_change as y-axis
    fill = code_class)) + # color by code_class
=======
mbc_log2_transformed_nested <- mbc_log2_transformed |> # define new tbl
  group_by(gene) |> # group by name
  nest() # nest data by each gene

# view nested data
mbc_log2_transformed_nested
```

### Fitting Linear Models for Log2-Transformed Values by Treatment

```{r}
mbc_log2_transformed_nested <- mbc_log2_transformed_nested |> 
  mutate(model_object = map( # add a model_object column
    .x = data, # use data column as input
    .f = ~lm(formula = log2_transformed ~ bin_treatment, # model log2 transformed values based on treatment
             data = .x)))

# view new nested data with lm results
mbc_log2_transformed_nested
```

### Tidying Linear Model Results with Confidence Intervals

```{r}
mbc_log2_transformed_nested <- mbc_log2_transformed_nested |> 
  mutate(model_object_tidy = map( # add a tidy model_object column
    .x = model_object,
    .f = ~tidy(x = .x,
               conf.int = TRUE,
               conf.level = 0.95)))
# view new nested data with tidy lm results
mbc_log2_transformed_nested
```

### Unnesting Tidy Linear Model Results

```{r}
estimates <- mbc_log2_transformed_nested |> 
  unnest(model_object_tidy) # unnest nested tbl
estimates
```

### Filtering and Selecting Treatment Effects from Linear Model Estimates

```{r}
estimates <- estimates |> 
  filter(term == "bin_treatment") |> # choose only "treatment"
  select(gene, # select variables of interest
         p.value, 
         estimate, 
         conf.low, 
         conf.high) |> 
  ungroup() # ungroup tbl

# view result
estimates
```

### Forest plot of q-values

```{r}
q_value_estimates <- estimates |> 
  mutate(q.value = p.adjust(p.value)) |> # add adjusted p-values
  filter(q.value < 0.05) # filter for all q-values below 0,05

if (nrow(q_value_estimates) > 0) { # if: there are any q-values below below 0,05, make plot
  q_value_estimates_plot <- q_value_estimates |> 
    ggplot(aes(x = estimate, # set x as estimate 
               y = fct_reorder(gene, # set y as gene 
                               estimate))) +
    geom_point() +
    geom_errorbarh(aes(xmax = conf.low, xmin = conf.high)) +
    theme_minimal(base_size = 8) +
    geom_vline(xintercept = 0, linetype = "solid", color = "black") +
    labs(
    title = "Significant Immune-Related Genes in Premenopausal ER+/HER2− \nAdvanced Breast Cancer",
    x = "Estimates (95% Confidence Intervals)",
    y = "Gene",
    caption = "Genes identified as significant (by q-value) after treatment with \npembrolizumab, exemestane, and leuprolide."
  ) +
    theme(plot.title.position = "plot")
  ggsave(here("results/forest_plot_q_value.png"), 
         plot = q_value_estimates_plot, 
         width = 10, 
         height = 6) 
} else { # else: explain why not
  print("There are no q-values below 0.05")
}
>>>>>>> 6551aa494b2a300ec87e5c2b2909ac1a87cd2d75
  
  labs(
    title = "Log2 Fold Change Differences Between Gene Classes",
    x = NULL,
    y = "Log2 Fold Change",
    fill = "Gene Class"
    ) +
  
  scale_fill_brewer(palette = "Paired") +
  geom_boxplot() +
  
  # using scale dicrete to control the x-axis spacing
  scale_x_discrete(expand = expansion(mult = c(0.2, 0.2))) +
  
  #Setting the titles and moving the title to the most left part
  theme(
    axis.text.x = element_text(size = 8,
                               angle = 0,
                               vjust = 1,
                               hjust = 0.5),
    axis.text.y = element_text(size = 8),# Rotate labels if needed
    axis.title.x = element_text(margin = margin(t = 10)),
    axis.title.y = element_text(size = 8),
    plot.title.position = "plot"
  )

<<<<<<< HEAD

# saving plot as png to the results folder
ggsave(here("results/05_boxplot_log2_fold_change_differences_between_gene_classes.png"), 
         plot = log2_fold_change_differences_boxplot, 
         width = 10, 
         height = 6)
```
=======
p_value_estimates_plot

ggsave(here("results/07_forest_plot_p_value.png"), 
         plot = p_value_estimates_plot, 
         width = 10, 
         height = 6)
```

#### Volcano plot

```{r}
estimates <- estimates |> 
  mutate(log_of_p = (-log10(p.value))) # create a new column with -10log10(p)
#| fig-width: 8
#| fig-height: 5.5
#| dpi: 300
volcano_plot <- estimates |> 
  ggplot(aes(x = estimate, # plot results
             y = log_of_p)) + 
  geom_point(alpha = 0.05) + # add semi-transparancy 
  geom_point(data = estimates |> # highlight signifanct genes in turquoise 
              filter(p_significance == "yes"), 
              color = "turquoise", 
              alpha = 0.6) +
  geom_point(data = estimates |> # dye insignifanct genes red 
             filter(p_significance == "no"), 
             color = "tomato", 
             alpha = 0.3) +
  geom_text_repel(data = estimates |> # label significant points with gene name
                  filter(p_significance == "yes"), 
                  aes(label = gene), 
                  size = 2, 
                  color = "turquoise", 
                  max.overlaps = 50) +
  theme_minimal(base_size = 8) +
  geom_hline(yintercept = 0, linetype = "solid", color = "black") +
  labs(
  title = "Immune Microenvironment in Response to Pembrolizumab, Exemestane, and Leuprolide \nin Premenopausal ER+/HER2− Advanced Breast Cancer",
  subtitle = "Significantly expressed genes (by non-adjusted p-values, highlighted in turquoise) \nafter treatment with pembrolizumab, exemestane, and leuprolide \nin pre- and post-treatment samples",
  x = "Estimates",
  y = "-log10(p-value)"
) +
  theme(plot.title.position = "plot")

volcano_plot

ggsave(here("results/07_volcano_plot_of_signifcantly_expressed_genes.png"),
       plot = volcano_plot,
       width = 8, 
       height = 5.5)
```

### comparing slopes with log 2 fold in percent difference

```{r}

######## skal denne slettes? ##########

# comparing slopes with log 2 fold in percent difference
#estimate_summary <- estimates |>
#  arrange(gene) |> 
#  summarise(estimate)
#log2fold <- mbc_clean_aug_wide |> 
#  arrange(gene) |> 
#  summarise(log2_fold_change)
# calculate  percent difference and rename the column
#percent_difference <- estimate_summary |> 
#  bind_cols(log2fold) |> 
#  mutate(percent_difference = round((estimate - log2_fold_change) / log2_fold_change * 100, 2)) %>%
#  select(percent_difference)

# percent_difference


```
>>>>>>> 6551aa494b2a300ec87e5c2b2909ac1a87cd2d75
