---
title: "04 decribtive statistics"
output: html_document
---

## Load libraries

```{r}
library(tidyverse)
library(here)
library(dplyr)
```

## Load data

```{r}
describe_dat_aug_01 <- read.csv(here("data/03_dat_aug_01.csv"))
describe_dat_aug_02 <- read.csv(here("data/03_dat_aug_02.csv"))
```

## Data description

### Amount of genes investigated in the experiment

```{r}
#number of genes (observations)
describe_dat_aug_01 |> 
  dim()
```

there is 784 variables which means there is 784 different genes in the experiment

### Amount of classes and genes in each class

```{r}
#which different classes the genes are in 
describe_dat_aug_01 |> 
  group_by(code_class) |> 
  summarise(n = n()) |> 
  print()

describe_dat_aug_01 |>
  ggplot(aes(x = code_class)) +
  geom_bar() + 
  labs(
    title = "Histogram of Classes",
    x = "Classes",
    y = "Number of Genes"
  ) +
  theme_minimal()

```

There is four different classes: endogenous, housekeeping, negative and positive.\
There is 750 genes in endogenous, 20 genes in housekeeping, 8 genes in negative and 6 genes in positive

### Amount of pre-treatment and post-treatment experiments

```{r}
describe_dat_aug_01 |> 
    select(starts_with("pre")) |> 
  ncol() |> 
  print()

describe_dat_aug_01 |> 
    select(starts_with("post")) |> 
  ncol() |> 
  print()
```

There is five columns (variables) containing data from pre-treatment experiment and vice verse for post-treatment. This mean there was done 10 experiments, five before treatment and five after treatment.

### Density plot of gene expression by code class in pre and post conditions

```{r}
density_plot_pre <- 
  ggplot(data = describe_dat_aug_02, aes(x = mean_pre, fill = code_class)) +
  geom_density(alpha = 0.5) +
  theme_minimal() +
  scale_x_log10() +
  scale_y_continuous(breaks = seq(0, 1, by = 0.25)) +
  labs(title = "Density Plot of Pre Gene Class",
       x = "Mean Expression ",
       y = "Density",
       fill = "Gene Class") + 
  theme(plot.title.position = "plot")

density_plot_post <- 
  ggplot(data = describe_dat_aug_02, aes(x = mean_post, fill = code_class)) +
  geom_density(alpha = 0.5) +
  theme_minimal() +
  scale_x_log10() +
  scale_y_continuous(breaks = seq(0, 1, by = 0.25)) +
  labs(title = "Density Plot of Post Gene Class",
       x = "Mean Expression ",
       y = "Density",
       fill = "Gene Class") + 
  theme(plot.title.position = "plot")
  
# view plot
print(density_plot_pre)
print(density_plot_post)

# save plots
ggsave(here("results/density_plot_pre.png"), plot = density_plot_pre, width = 10, height = 6)
ggsave(here("results/density_plot_post.png"), plot = density_plot_post, width = 10, height = 6)
```

This plot does assess the variation in gene expression across the different code classes and observe any shifts between the "pre" and "post" conditions.

### The genes there is most up regulated and down regulated in terms of fold change before and after treatment

```{r}
#The 2% most upregulated and the 2% most downregulated after treatment for each class are plottet. Here you can see which genes are most up regulated and downregulated after treatment from each class. 
top2_fold_change <- describe_dat_aug_01 |> 
  group_by(code_class) |> 
 mutate(
  biggest_fold_change = case_when(
    log2_fold_change <= quantile(log2_fold_change, 0.02, na.rm = TRUE) ~ "Low",
    log2_fold_change >= quantile(log2_fold_change, 0.98, na.rm = TRUE) ~ "High",
    TRUE ~ "middle")
  ) |> 
  filter(biggest_fold_change %in% c("High", "Low")) |> 
  ggplot(mapping = aes(x = gene,
                       y = log2_fold_change)) + 
  geom_point(aes(color = code_class, shape = biggest_fold_change)) + 
  labs(title = "Top 2% Most Upregulated and Downregulated Genes After Treatment by Code Class",
       x = "Genes",
       y = "Fold Change",
       color = "Gene Class",
       shape = "Top or Buttom 2%") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  plot.title.position = "plot") 
  
# view plot
print(top2_fold_change)

# save plot
ggsave(here("results/04_top_2_procent_fold_change.png"), plot = top2_fold_change, width = 10, height = 6)
```

### Which genes are it exactly ?

```{r}
describe_dat_aug_01 |> 
  group_by(code_class) |> 
 mutate(
  biggest_fold_change = case_when(
    log2_fold_change <= quantile(log2_fold_change, 0.02, na.rm = TRUE) ~ "Low",
    log2_fold_change >= quantile(log2_fold_change, 0.98, na.rm = TRUE) ~ "High",
    TRUE ~ "middle")
  ) |> 
  filter(biggest_fold_change %in% c("High", "Low")) |> 
  arrange(desc(log2_fold_change)) |> #from highest log2fold change to lowest 
  print()

```
