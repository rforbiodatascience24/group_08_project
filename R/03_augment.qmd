# Load Libraries

```{r}
library(tidyverse)
library(here)
source("99_proj_func.R")
```

# Load data

```{r}
df_clean <- read.csv(here("data/02_dat_clean.csv"))
```

# Augmentation

### Create wide df

```{r}

# Replace outliers for both pre_count and post_count columns in a single step
df_wide <- df_clean |>
  replace_outliers_with_na("pre_count") |>
  replace_outliers_with_na("post_count") |> 
  rowwise() |> 
  mutate(mean_pre = round(mean(c_across(starts_with("pre_count")), na.rm = TRUE),1),
         mean_post = round(mean(c_across(starts_with("post_count")), na.rm = TRUE),1)) |> 
  ungroup() |> 
  mutate(log2_fold_change = log2(mean_post / mean_pre)) 

# view data
print(df_wide)

# save data
write_csv(df_wide, here("data/03_dat_aug_01.csv"))
```

#### Create a long df with a row for each "count" variable

```{r}
# make a longer data frame with a row for each "count" variable
df_long <- df_wide |>  
  pivot_longer(
    cols = starts_with("pre_count") | starts_with("post_count"), # select count columns
    names_to = "treatment",  # new column for column names
    values_to = "count_value" # new column for values
  ) |> 
  mutate(log2_transformed = log2(count_value)) |> # calculate log2 of counts
  mutate(bin_treatment = case_when(
                          str_detect(treatment, "^pre") ~ 0, # change "pre" to 0
                          str_detect(treatment, "^post") ~ 1)) |> # change "post" to 1
  mutate(treatment = case_when(
                          str_detect(treatment, "^pre") ~ "pre", # change to "pre" 
                          str_detect(treatment, "^post") ~ "post")) |> # change to "post"
# view data
print(df_long)

# save data
write_csv(df_long, here("data/03_dat_aug_02.csv"))
```
