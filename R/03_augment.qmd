# Load Libraries

```{r}
library(tidyverse)
library(here)
source("99_proj_func.R")
```

# Load data

```{r}
mbc_clean_aug <- read.csv(here("data/02_dat_clean.csv"))
```

# Augmentation

```{r}
mbc_clean_aug <- mbc_clean_aug |> 
  rowwise() |> 
  mutate(filtered_mean_pre = calculate_filtered_mean(c_across(starts_with("pre_count")))) |> 
  ungroup()


mbc_clean_aug <- mbc_clean_aug |> 
  rowwise() |> 
  mutate(filtered_mean_post = calculate_filtered_mean(c_across(starts_with("post_count")))) |> 
  ungroup()

write_csv(mbc_clean_aug, here("data/03_dat_aug_01.csv"))

mbc_clean_aug
```

```{r}
# make a longer data frame with a row for each "count" variable
long_data <- mbc_clean_aug |> 
  pivot_longer(
    cols = c(starts_with("pre_count"), starts_with("post_count")), # select count columns
    names_to = "count_type",  # new column for column names
    values_to = "count_value" # new column for values
  ) 

write_csv(long_data, here("data/03_dat_aug_02.csv"))

long_data
```

im making counttype to either pre=0 or post=1 so the data can be used for modelling

```{r}
long_data_for_modelling <- long_data |> 
   mutate(count_type = case_when(count_type == "pre_count_1" ~ "0",
                                count_type == "pre_count_2" ~ "0",
                                count_type == "pre_count_3" ~ "0",
                                count_type == "pre_count_4" ~ "0",
                                count_type == "pre_count_5" ~ "0",
                                count_type == "post_count_1" ~ "1",
                                count_type == "post_count_2" ~ "1",
                                count_type == "post_count_3" ~ "1",
                                count_type == "post_count_4" ~ "1",
                                count_type == "post_count_5" ~ "1"
                                )) |> 
  select("code_class", "name", "count_type", "count_value")

write_csv(long_data_for_modelling, here("data/03_dat_aug_04.csv"))

long_data_for_modelling

```

### make the data set longer with pivot longer

```{r}

mbc_clean_aug_long <- 
mbc_clean_aug |> 
  pivot_longer(
    cols = starts_with("filtered"),
    names_to = "type",
    values_to = "mean_count"
  ) |> 
  select("code_class", "name", "type", "mean_count") |> 
  mutate(type = case_when(
    type == "filtered_mean_pre" ~ "pre",
    type == "filtered_mean_post" ~ "post"
  ))

mbc_clean_aug_long
```

## adding log transformed

```{r}
mbc_clean_aug_long_log_trans <- 
mbc_clean_aug_long |> 
  mutate(log2_transformed = log2(mean_count+1))


mbc_clean_aug_long_log_trans

write_csv(mbc_clean_aug_long_log_trans, here("data/03_dat_aug_03.csv"))
```

### making log2 fold change of case/control

laver log2 fold change på datasæt inden at det er blevet gjort long så man ikke behøver at lave det wide

```{r}
mbc_clean_aug_log2fc <- mbc_clean_aug |> 
  mutate(log2_fold_change = log2(filtered_mean_post / filtered_mean_pre)) |> 
  select("code_class", "name", "log2_fold_change") |> 
  arrange(desc(log2_fold_change))

mbc_clean_aug_log2fc

```

```{r}
# Making log2 fold change (log2(post/pre))
mbc_clean_aug_wide <- mbc_clean_aug_long |> 
  pivot_wider(names_from = type, values_from = mean_count) |> 
  mutate(log2_fold_change = log2(post / pre))

mbc_clean_aug_wide
```
