# Load Libraries

```{r}
library(tidyverse)
library(here)
source("99_proj_func.R")
```

# Load data

```{r}
mbc_clean_aug <- read.csv(here("data/02_dat_clean.csv"))
```

# Augmentation

```{r}
mbc_clean_aug <- mbc_clean_aug |> 
  rowwise() |> 
  mutate(filtered_mean_pre = calculate_filtered_mean(as.numeric(c_across(starts_with("pre_count"))))) |> 
  ungroup()

mbc_clean_aug <- mbc_clean_aug |> 
  rowwise() |> 
  mutate(filtered_mean_post = calculate_filtered_mean(as.numeric(c_across(starts_with("post_count"))))) |> 
  ungroup()

# Save data
write_csv(mbc_clean_aug, here("data/03_dat_aug_01.csv"))
```

```{r}
# make a longer data frame with a row for each "count" variable
long_data <- mbc_clean_aug |> 
  pivot_longer(
    cols = starts_with("pre_count") | starts_with("post_count"), # select count columns
    names_to = "count_type",  # new column for column names
    values_to = "count_value" # new column for values
  ) 

write_csv(long_data, here("data/03_dat_aug_02.csv"))

```

long data for modelling

```{r}

```

### make the data set longer with pivot longer

```{r}

mbc_clean_aug_long <- 
mbc_clean_aug |> 
  pivot_longer(
    cols = starts_with("filtered"),
    names_to = "type",
    values_to = "mean_count"
  ) |> 
  select("code_class", "name", "type", "mean_count") |> 
  mutate(type = case_when(
    type == "filtered_mean_pre" ~ "pre",
    type == "filtered_mean_post" ~ "post"
  ))
mbc_clean_aug_long

```

## adding log transformed

```{r}
mbc_clean_aug_long_log_trans <- 
mbc_clean_aug_long |> 
  mutate(log2_transformed = log2(mean_count))
mbc_clean_aug_long_log_trans
```


```{r}
# Making log2 fold change (log2(post/pre))
mbc_clean_aug_wide <- mbc_clean_aug_long |> 
  pivot_wider(names_from = type, values_from = mean_count) |> 
  mutate(log2_fold_change = log2(post / pre))

mbc_clean_aug_wide
```
