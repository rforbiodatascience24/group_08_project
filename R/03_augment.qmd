# Load Libraries

```{r}
library(tidyverse)
library(here)
source("99_proj_func.R")
```

# Load data

```{r}
mbc_clean_aug <- read.csv(here("data/02_dat_clean.csv"))
```

# Augmentation

```{r}
print(mbc_clean_aug)
# mbc_clean_aug <- mbc_clean_aug |> 
#   rowwise() |> 
#   mutate(filtered_mean_pre = calculate_filtered_mean(as.numeric(c_across(starts_with("pre_count"))))) |> 
#   ungroup()
# 
# mbc_clean_aug <- mbc_clean_aug |> 
#   rowwise() |> 
#   mutate(filtered_mean_post = calculate_filtered_mean(as.numeric(c_across(starts_with("post_count"))))) |> 
#   ungroup()

# Replace outliers for both pre_count and post_count columns in a single step
df <- mbc_clean_aug |>
  replace_outliers_with_na("pre_count") |>
  replace_outliers_with_na("post_count")

# No need for a join if both are already in the same data frame
print(df)

# Save data
write_csv(joined_df, here("data/03_dat_aug_01.csv"))
```

### Log2 transform count values (not mean_count values)

```{r}
mbc_log2_transformed <- long_data |>
  mutate(log2_transformed = log2(count_value)) |> # calculate log2 of counts
  mutate(count_type = case_when(
                          str_detect(count_type, "^pre") ~ 0, # # change every instance that contains "pre" to 0
                          str_detect(count_type, "^post") ~ 1)) |> # change every instance that contains "post" to 1
  relocate(treatment = count_type) # rename count_type to treatment 

write_csv(mbc_log2_transformed, here("data/03_dat_aug_05.csv"))
```

```{r}
####### Do we use this long_data? #################
# make a longer data frame with a row for each "count" variable
long_data <- joined_df |> 
  pivot_longer(
    cols = starts_with("pre_count") | starts_with("post_count"), # select count columns
    names_to = "count_type",  # new column for column names
    values_to = "count_value" # new column for values
  ) 

write_csv(long_data, here("data/03_dat_aug_02.csv"))

print(long_data)

```

### make the data set longer with pivot longer

```{r}
colnames(mbc_clean_aug)
```

```{r}
mbc_clean_aug_long <- 
joined_df |> 
  pivot_longer(
    cols = starts_with("filtered"),
    names_to = "type",
    values_to = "mean_count"
  ) |> 
  select("code_class", "gene", "type", "mean_count") |> 
  mutate(type = case_when(
    type == "filtered_mean_pre" ~ "pre",
    type == "filtered_mean_post" ~ "post"
  ))
mbc_clean_aug_long

```

## adding log transformed count

```{r}
mbc_clean_aug_long_log_trans <- 
mbc_clean_aug_long |> 
  mutate(log2_transformed = log2(mean_count))
mbc_clean_aug_long_log_trans

write_csv(mbc_clean_aug_long_log_trans, here("data/03_dat_aug_04.csv"))
```

## Making log2 fold change on case/control

```{r}
#laver log2 fold change på datasæt inden at det er blevet gjort long så man ikke behøver at lave det wide

mbc_clean_aug_log2fc <- mbc_clean_aug |> 
  mutate(log2_fold_change = log2(filtered_mean_post / filtered_mean_pre)) |> 
  select("code_class", "name", "log2_fold_change")
mbc_clean_aug_log2fc

write_csv(mbc_clean_aug_log2fc, here("data/03_dat_aug_03.csv"))

```
