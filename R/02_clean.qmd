## Load libraries

```{r}
#| message: false

library(tidyverse)
library(here)
library(readr)
library(stringr)
source("99_proj_func.R")
```

## Load in data

```{r}
# define list of dataframes for pre data
data_list_pre <- c(here('data/01_dat_load_pre_data_GSM8152441.csv'), 
               here('data/01_dat_load_pre_data_GSM8152442.csv'),
               here('data/01_dat_load_pre_data_GSM8152443.csv'),
               here('data/01_dat_load_pre_data_GSM8152444.csv'),
               here('data/01_dat_load_pre_data_GSM8152445.csv')) |>
  # map() files into the list
  map(read_csv) 

# define list of dataframes for post data
data_list_post <- c(here('data/01_dat_load_post_data_GSM8152447.csv'), 
               here('data/01_dat_load_post_data_GSM8152448.csv'),
               here('data/01_dat_load_post_data_GSM8152449.csv'),
               here('data/01_dat_load_post_data_GSM8152450.csv'),
               here('data/01_dat_load_post_data_GSM8152451.csv')) |>
  # map() files into the list
  map(read_csv) 
```

## Clean data

```{r}
# define clean list for pre data
clean_data_list_pre <-
  data_list_pre |> 
  # use clean_data function to clean the list of data frames
  map(clean_data)

# define clean list for post data
clean_data_list_post <-
  data_list_post |> 
  # use clean_data function to clean the list of data frames
  map(clean_data)
```

## Merge data

```{r}
# create vector with both lists of data frames
merged_data <- list(clean_data_list_pre, 
                    clean_data_list_post) |> 
  # unpack nested dataframes
  flatten() |>  
  # join data frames
  reduce(inner_join, 
         by = c("name", 
                "code_class", 
                "accesion_number")) |> 

  
  # rename count variables to not be named .x.x.x or .y.y etc.
  rename_with(~ case_when(
    # detect all columns containing count.x and for each column count the number of .x or .y and rename the column.
    str_detect(., "^count\\.x") ~ paste0("pre_count_", 
                                         str_count(., "\\.x")),
    
    str_detect(., "^count\\.y") ~ paste0("post_count_", 
                                         str_count(., "\\.y")),
    . == "name" ~ "gene",
    TRUE ~ .
  ))

print(merged_data)
```

## Write to csv

```{r}
write_csv(merged_data, here("data/02_dat_clean.csv"))
```
